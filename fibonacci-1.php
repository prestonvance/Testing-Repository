

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


<?php
$fibnumbers = array(1,2);

function fibonacci($index) {
	$val;
	global $fibnumbers;
	if ($index < 0) {
		# TODO throw some error
		echo "The index must be greater than or equal to zero <br/>";
		$val = 0;
	}
	# memoization step where we look if we've calculated the value already
	elseif ($index < count($fibnumbers)) {
		$val = $fibnumbers[$index];
	} else {
		$val = fibonacci($index - 1) + fibonacci($index - 2);
		$fibnumbers[$index] = $val;
	}
	return $val;
}

function test_even($val) {
	return $val % 2 === 0;
}

function add_even_fibonacci($limit) {
	$sum = 0;
	$i = 0;
	for($fib = fibonacci($i); $fib < $limit; $fib = fibonacci($i++)) {
		if(test_even($fib)) {
			$sum += $fib;
		}
	}
	return $sum;
}

$limit = 4000000;
$input = $_GET["limit"];
if(!empty($input)) {
	$limit = $input;
}
echo "<br/>";

echo "The sum of fibonacci numbers less than $limit is " . add_even_fibonacci($limit) . " <br/>";

echo "The list of even Fibonacci values is: " . join(", ", array_filter($fibnumbers, "test_even")) . " <br/>";
?>
